"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = exports.kick = exports.ban = exports.init = void 0;
var cmdloader = require('./commandHandler/handler');
var finder = require('./commandHandler/finder');
var init = /** @class */ (function () {
    function init(client, joinMessage, token) {
        this.client = client;
        this.joinMessage = joinMessage;
        this.token = token;
    }
    init.prototype.join = function () {
        this.client.login(this.token);
        console.log(this.joinMessage);
    };
    return init;
}());
exports.init = init;
var ban = /** @class */ (function () {
    function ban(banMessage, noPermissionMessage, neededPermission, invalidMemberMessage) {
        this.banMessage = banMessage;
        this.noPermissionMessage = noPermissionMessage;
        this.neededPermission = neededPermission;
        this.invalidMemberMessage = invalidMemberMessage;
    }
    ban.prototype.ban = function (message, member) {
        var _this = this;
        var _a;
        if (!((_a = message.member) === null || _a === void 0 ? void 0 : _a.hasPermission(this.neededPermission)))
            return;
        if (!member)
            return message.channel.send(this.invalidMemberMessage);
        try {
            if (!member.bannable) {
                message.channel.send(this.noPermissionMessage.replace("{member}", member.user.username));
            }
            member.ban().then(function () {
                message.channel.send(_this.banMessage.replace("{member}", member.user.username));
            });
        }
        catch (err) {
            console.warn("ERRO: " + err);
        }
    };
    return ban;
}());
exports.ban = ban;
var kick = /** @class */ (function () {
    function kick(kickMessage, neededPermission, noKickPermissionMessage, invalidMember) {
        this.kickMessage = kickMessage;
        this.neededPermission = neededPermission;
        this.noKickPermissionMessage = noKickPermissionMessage;
        this.invalidMember = invalidMember;
    }
    kick.prototype.kick = function (message, member) {
        var _this = this;
        if (!member) {
            return message.channel.send(this.invalidMember);
        }
        try {
            if (!member.bannable) {
                return message.channel.send("" + this.noKickPermissionMessage.replace("{member}", member.user.username));
            }
            member.ban().then(function () {
                message.channel.send(_this.kickMessage.replace("{member}", member.user.username));
            });
        }
        catch (err) {
            console.log("ERROR");
        }
    };
    return kick;
}());
exports.kick = kick;
var handler = /** @class */ (function () {
    function handler(commandDir) {
        this.commandDir = commandDir;
    }
    handler.prototype.handle = function () {
        cmdloader.handle(this.commandDir);
    };
    handler.prototype.runCommand = function (commandName, client, msg, args) {
        finder.find(commandName, client, msg, args, this.commandDir);
    };
    return handler;
}());
exports.handler = handler;
//# sourceMappingURL=index.js.map