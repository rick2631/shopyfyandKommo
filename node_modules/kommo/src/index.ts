import * as discord from "discord.js"
const cmdloader = require('./commandHandler/handler')
const finder = require('./commandHandler/finder')
export class init{
    client: discord.Client
    joinMessage: string
    token: string
    constructor(client: discord.Client, joinMessage: string, token: string){
        this.client = client
        this.joinMessage = joinMessage
        this.token = token

    }
   join(){
        this.client.login(this.token)
        console.log(this.joinMessage)
    }
    
    
}

export class ban{
    banMessage: string
    noPermissionMessage: string
    neededPermission: discord.PermissionString
    invalidMemberMessage: string
    constructor(banMessage: string, noPermissionMessage:string, neededPermission: discord.PermissionString, invalidMemberMessage: string){
        this.banMessage = banMessage
        this.noPermissionMessage = noPermissionMessage
        this.neededPermission = neededPermission
        this.invalidMemberMessage = invalidMemberMessage
    }
    ban(message:discord.Message, member: discord.GuildMember){
        if(!message.member?.hasPermission(this.neededPermission)) return
        if(!member) return message.channel.send(this.invalidMemberMessage)
        try{
            if(!member.bannable){
                message.channel.send(this.noPermissionMessage.replace("{member}", member.user.username))
            }
            member.ban().then(() => {
                message.channel.send(this.banMessage.replace("{member}", member.user.username))
            })
        }catch(err){
            console.warn("ERRO: " + err)
        }
    }
}
export class kick{
    kickMessage: string
    neededPermission: discord.PermissionString
    noKickPermissionMessage: string
    invalidMember: string
    constructor(kickMessage: string, neededPermission: discord.PermissionString, noKickPermissionMessage:string, invalidMember: string){
        this.kickMessage = kickMessage
        this.neededPermission = neededPermission
        this.noKickPermissionMessage = noKickPermissionMessage
        this.invalidMember = invalidMember
    }
    kick(message: discord.Message, member: discord.GuildMember){
        if(!member){
            return message.channel.send(this.invalidMember)
        }
        try{
            if(!member.bannable){
                return message.channel.send(`${this.noKickPermissionMessage.replace("{member}", member.user.username)}`)
            }
            member.ban().then(() => {
                message.channel.send(this.kickMessage.replace("{member}", member.user.username))
            })
        }catch(err){    
            console.log("ERROR")
        }
    }
}
export class handler{
    commandDir: string
    constructor(commandDir:string){
        this.commandDir = commandDir
    }
    handle(){
        cmdloader.handle(this.commandDir)
    }
    runCommand(commandName: string, client: discord.Client, msg: discord.Message, args: string[]){
        finder.find(commandName, client, msg, args, this.commandDir)
    }


}